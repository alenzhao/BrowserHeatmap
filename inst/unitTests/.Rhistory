?plotxy
?plot
args(plot)
args(plot.xy)
q()
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"); 
(1:10)^2
   app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)
traceback()
BrowserViz:::status
q()
source("test_BrowserPlot2D.R"); 
   app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)
traceback()
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
traceback()
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
 plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
()
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserPlot2D.R"); 
app <- BrowserPlot2D(quiet=FALSE, port=9000); plot(app, 1:10, (1:10)^2)
close(app)
testPlot()
q()
source("test_BrowserPlot2D.R"); 
runTests()
runTests()
q()
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"); runTests
testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
q()
source("test_BrowserPlot2D.R"); testPlot()
testPlot
q()
source("test_BrowserPlot2D.R"); testPlot()
testPlot
   app <- BrowserPlot2D(quiet=FALSE, port=9000);     plot(app, 1:100, (1:100)^3)
getSelection(app)
BrowserPlot2D:::getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot()
testPlot
   app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)

getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot()
testPlot
   app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^4)
getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot
   app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)
getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot
 app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)
getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot
 app <- BrowserPlot2D(quiet=FALSE, port=9000);
   plot(app, 1:10, (1:10)^2)
getSelection(app)
getSelection(app)
q()
source("test_BrowserPlot2D.R"); testPlot
source("test_BrowserPlot2D.R"); app <- testPlot()
source("test_BrowserPlot2D.R"); app <- testPlot()
 getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
sessionInfo()
q()
q()
library(BrowserPlot2D)
sessionInfo()
q()
source("test_BrowserPlot2D.R");
sessionInfo()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
getSelection(app)
source("test_BrowserPlot2D.R"); app <- testPlot()
close(app)
source("test_BrowserPlot2D.R"); 
testPlot
app <- BrowserPlot2D(quiet=FALSE, port=9000);
getSelection(app)
close(app)
source("test_BrowserPlot2D.R"); app <- testPlot()
close(app)
source("test_BrowserPlot2D.R"); app <- testPlot()
close(app)
q()
source("test_BrowserPlot2D.R"); 
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"); runTests()
getSelection(app)
q()
source("test_BrowserPlot2D.R"); runTests()
q()
dir()
source("test_BrowserPlot2D.R")
runTests()
q()
source("test_BrowserPlot2D.R")
runTests()
getSelection(app)
q()
source("test_BrowserPlot2D.R")
runTests()
q()
source("test_BrowserPlot2D.R"); runTests()
getSelection(app)
close(app)
source("test_BrowserPlot2D.R"); app <- testPlot()
getSelection(app)
is.na(getSelection(app))
getSelection(app)
x <- getSelection()
x <- getSelection(app)
q()
source("test_BrowserPlot2D.R")
runTests()
q()
source("test_BrowserPlot2D.R")
q()
source("test_BrowserPlot2D.R")
getWindowTitle(app)
setWindowTitle(app, "new title");
setWindowTitle
showMethods("setWindowTitle")
selectMethod("setWindowTitle", "BrowserPlot2DClass")
setWindowTitle(app, "new title");
q()
source("test_BrowserPlot2D.R")
runTests()
q()
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"); 
getSelection(app)
getSelection(app)
q()
source("test_BrowserPlot2D.R"); 
getSelection(app)
q()
source("test_BrowserPlot2D.R"); 
getSelection(app)
getSelection(app)
checkEquals(getSelection(app), list())
getSelection(app)
getSelection(app)
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserPlot2D.R"0
source("test_BrowserPlot2D.R")
source("test_BrowserPlot2D.R")
runTests
runTests()
data.frame(integers=1:2, strings=c("ABC", "def"), floats=c(3.14, 2.718), stringsAsFactors=FALSE)
data.frame(integers=1:2, strings=c("ABC", "def"), floats=c(3.14, 2.718), stringsAsFactors=FALSE, row.names=c("rowOne", "rowTwo"))
library(jsonlite)
toJSON(tbl)
return.msg
fromJSON(return.msg)
return.msg
return.msg.json
?toJSON
toJSON(tbl, dataframe="rows")
toJSON(tbl, dataframe="columns")
toJSON(tbl, dataframe="values")
tbl
rownames(tbl) <- NULL
tbl
toJSON(tbl, dataframe="rows")
toJSON(tbl, dataframe="columns")
tbl
as.matrix(tbl)
toJSON(as.matrix(tbl))
  tbl <- data.frame(integers=1:2, strings=c("ABC", "def"), floats=c(3.14, 2.718),
                    stringsAsFactors=FALSE, row.names=c("rowOne", "rowTwo"))

tbl
toJSON(as.matrix(tbl))
toJSON(tbl)
  tbl <- data.frame(integers=1:2, strings=c("ABC", "def"), floats=c(3.14, 2.718),
                    stringsAsFactors=FALSE, row.names=c("rowOne", "rowTwo"))

tbl
tbl
toJSON(tbl)
fromJSON(toJSON(tbl))
checkEquals(fromJSON(toJSON(tbl)), tbl)
lapply(tbl, class)
unlist(lapply(tbl, class), use.names=FALSE)
q()
source("test_BrowserPlot2D.R")
runTess()
runTests()
source("test_BrowserPlot2D.R"); runTests()
q()
source("test_BrowserVizDemo.R")
q()
source("test_BrowserVizDemo.R")
runTests()
q()
source("test_BrowserVizDemo.R")
runTests()
q()
source("test_BrowserVizDemo.R")
runTests()
q()
source("test_BrowserVizDemo.R")
runTests()
runTests
testConstructor
q()
source("test_BrowserVizDemo.R")
runTests
testConstructor
testConstructor()
q()
source("test_BrowserVizDemo.R")
testConstructor()
q()
source("test_BrowserVizDemo.R")
testConstructor()
runTests()
   app <- BrowserVizDemo(port=8000);
   checkTrue(ready(app))

   title <- "simple xy plot test";
   setBrowserWindowTitle(app, title)
   checkEquals(getBrowserWindowTitle(app), title)

   checkEquals(getSelection(app), list())

   plot(app, 1:10, (1:10)^2)
     # without direct manipulation of the plotted surface, there will still
     # be no selections

   checkEquals(getSelection(app), list())

getSelection(app)
q()
 source("test_BrowserHeatmap.R")
 source("test_BrowserHeatmap.R")
runTests
testPlot()
 source("test_BrowserHeatmap.R"); testPlot()
q()
 source("test_BrowserHeatmap.R"); testPlot()
q()
 source("test_BrowserHeatmap.R"); testPlot()
q()
source("test_BrowserHeatmap.R")
q()
source("test_BrowserHeatmap.R")
q()
source("test_BrowserHeatmap.R")
q()
source("test_BrowserHeatmap.R")
q()
source("test_BrowserHeatmap.R")
runTests
testPlot
testWindowTitle
testConstructor
   app <- BrowserHeatmap(quiet=FALSE, portRange=PORTS);
q()
source("test_BrowserHeatmap.R")
   app <- BrowserHeatmap(quiet=FALSE, portRange=PORTS);
q()
source("test_BrowserHeatmap.R")
   app <- BrowserHeatmap(quiet=FALSE, portRange=PORTS);
   app <- BrowserHeatmap(quiet=FALSE, portRange=PORTS, quiet=FALSE);
   app <- BrowserHeatmap(quiet=FALSE, portRange=PORTS)
totalWait
c
app
testPlot
plot(app, 1:10, (1:10)^2)
app
q()
source("test_BrowserHeatmap.R")
testPlot
   app <- BrowserHeatmap(portRange=PORTS);
   checkTrue(ready(app))

 app <- BrowserHeatmap(portRange=PORTS);
 app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE);
q()
source("test_BrowserHeatmap.R")
 app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE);
q()
source("test_BrowserHeatmap.R")
 app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE);
q()
source("test_BrowserHeatmap.R")
 app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE);
q()
source("test_BrowserHeatmap.R")
testPlot
app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE)
q()
source("test_BrowserHeatmap.R")
app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE)
q()
source("test_BrowserHeatmap.R")
app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE)
q()
source("test_BrowserHeatmap.R")
app <- BrowserHeatmap(portRange=PORTS, quiet=FALSE)
c
testPlot
 plot(app, 1:10, (1:10)^2)
q()
source("test_BrowserHeatmap.R"); runTests()
c
c
c
app
source("test_BrowserHeatmap.R"); app <- demo()
c
getSelection(app)
q()
source("test_BrowserHeatmap.R"); app <- demo()
getSelection(app)
getSelection(app)
getSelection(app)
getSelection(app)
sample(1:1000, size=20)
sample(1:1000, size=20)/1000
matrix(sample(1:1000, size=20)/1000, nrow=4, dinnames=list(1:4, 1:5))
matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(1:4, 1:5))
matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(LETTERS[1:4], letters[1:5]))
q()
source("test_BrowserHeatmap.R"); app <- demo()
q()
source("test_BrowserHeatmap.R"); app <- demo()
q()
source("test_BrowserHeatmap.R"); app <- demo()
q()
source("test_BrowserHeatmap.R"); app <- demo()
q()
source("test_BrowserHeatmap.R"); app <- demo()
app <- demo()
app <- demo()
demo
 app <- BrowserHeatmap(portRange=PORTS);
demo
matrix <- matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(LETTERS[1:4], letters[1:5]))
display(app, matrix)
q()
source("test_BrowserHeatmap.R"); app <- demo()
 app <- BrowserHeatmap(portRange=PORTS);
demo
   matrix <- matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(LETTERS[1:4], letters[1:5]))
matrix
 display(app, matrix)
 display(app, matrix)
q()
source("test_BrowserHeatmap.R"); app <- demo()
demo
app <- BrowserHeatmap(portRange=PORTS);
demo
matrix <- matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(LETTERS[1:4], letters[1:5]))
 display(app, matrix)
q()
source("test_BrowserHeatmap.R"); demo
   app <- BrowserHeatmap(portRange=PORTS);

demo
 matrix <- matrix(sample(1:1000, size=20)/1000, nrow=4, dimnames=list(LETTERS[1:4], letters[1:5]))
display(app, matrix)
runTests()
source("test_BrowserHeatmap.R"); runTests()
source("test_BrowserHeatmap.R"); runTests()
q()
source("test_BrowserHeatmap.R"); runTests()
q()
source("test_BrowserHeatmap.R"); runTests()
q()
